name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      dry_run:
        description: 'Dry run (do not publish)'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build
      
    - name: Version bump (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: |
        # Disable git hooks for npm version
        git config advice.addIgnoredFile false
        npm version ${{ github.event.inputs.release_type }} --no-git-tag-version
        echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        
    - name: Get version from tag (tag trigger)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        echo "NEW_VERSION=$TAG_VERSION" >> $GITHUB_ENV
        npm version $TAG_VERSION --no-git-tag-version
        
    - name: Create changelog
      run: |
        if [ ! -f CHANGELOG.md ]; then
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
        fi
        
        # Add new version entry
        VERSION_DATE=$(date +%Y-%m-%d)
        sed -i "3i\\
        ## [$NEW_VERSION] - $VERSION_DATE\\
        \\
        ### Added\\
        - Release v$NEW_VERSION\\
        \\
        " CHANGELOG.md
        
    - name: Commit version changes (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: |
        git add package.json CHANGELOG.md
        git commit -m "chore: bump version to v$NEW_VERSION"
        git tag "v$NEW_VERSION"
        git push origin main --follow-tags
        
    - name: Dry run check
      if: github.event.inputs.dry_run == 'true'
      run: |
        echo "üîç DRY RUN MODE - No actual publishing will occur"
        npm publish --dry-run
        
    - name: Publish to npm
      if: github.event.inputs.dry_run != 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release
      if: github.event.inputs.dry_run != 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Release v${{ env.NEW_VERSION }}
        body: |
          ## Changes in v${{ env.NEW_VERSION }}
          
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
          
          ### Installation
          ```bash
          npm install -g pocketbase-zod-generator@${{ env.NEW_VERSION }}
          ```
          
          ### Usage
          ```bash
          pocketbase-zod-generator --env
          ```
        draft: false
        prerelease: false
        
    - name: Post-release notification
      if: github.event.inputs.dry_run != 'true'
      run: |
        echo "üéâ Successfully published pocketbase-zod-generator@v$NEW_VERSION"
        echo "üì¶ NPM: https://www.npmjs.com/package/pocketbase-zod-generator"
        echo "üè∑Ô∏è GitHub: https://github.com/${{ github.repository }}/releases/tag/v$NEW_VERSION"